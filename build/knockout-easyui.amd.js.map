{"version":3,"sources":["knockout-easyui.amd.debug.js"],"names":["factory","window","define","amd","ko","$","bindingHandlers","init","element","valueAccessor","allBindingsAccessor","viewModel","bindingContext","update","easyuiOptionsVersion","utils","object","isFunction","obj","isNull","isUndefined","property","key","MAX_ARRAY_INDEX","Math","pow","getLength","isArray","collection","length","array","each","source","action","i","sourceLength","all","predictor","any","map","mapper","ret","Array","findIndex","findIndexTuple","filter","push","clone","id","sequenceEqual","target","idSelector","sourceIds","targetIds","diff","compareArrays","item","hasOwnProperty","component","checkComponentInited","componentTypeName","data","initComponent","extOptions","allBindings","options","extend","ensureComponentInited","bindDisposeEvent","domNodeDisposal","addDisposeCallback","tree","tree_1","treeToArray","tmpNodes","innerTreeToNodes","nodes","node","children","innerClone","clonedTree","clonedNode","text","state","checked","attributes","func","func_1","debounce","wait","immediate","timeout","args","context","timestamp","result","later","last","now","setTimeout","apply","this","arguments","callNow","safeApply","_i","convertToString","value","Date","getTime","curValue","current","refreshValueFun","oriFun","onSelect","unwrapObservable","$combobox","onLoadSuccess","datas","values","curValues","multiple","onUnselect","comboOptions","combo","previousText","previousValue","onChange","$combogrid","rows","idField","currentValues","datagrid","$grid","gridOptions","singleSelect","newValueIds","v","oriValues","newValueId","oriValue","$combotree","oriNodes","newNodes","vs","newValue","bindDatagridDisposeEvent","getIdField","$datagrid","selections","onSelectAll","onUnselectAll","selectedRows","invalidValueIndexs","index","_a","rowIndex","invalidIndex","splice","selectedRow","selected","unselectAllValueFun","selectAllValueFun","parseFloat","easyuiAccessor","call","oldValue","removeClass","required","addClass","newActualValue","updatedValue"],"mappings":"CAIA,SAAWA,GACHC,OAAOC,QAAUD,OAAOC,OAAOC,IAC/BF,OAAOC,QAAQ,WAAY,SAAU,kBAAmB,SAAUE,EAAIC,GAClEL,EAAQI,EAAIC,KAGhBL,EAAQC,OAAW,GAAGA,OAAe,SAE1C,SAASG,EAAGC,GACfD,EAAGE,gBAA+B,eAC9BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,KACxEC,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,KAC1EE,qBAAsB,QAG1B,IAAIC,IACJ,SAAWA,GACP,GAAIC,IACJ,SAAWA,GACPA,EAAOC,WAAa,SAAUC,GAAO,MAAsB,kBAARA,IACnDF,EAAOG,OAAS,SAAUD,GACtB,MAAe,QAARA,GAEXF,EAAOI,YAAc,SAAUF,GAC3B,MAAe,UAARA,EAEX,IAAIG,GAAW,SAAUC,GACrB,MAAO,UAAUJ,GACb,MAAc,OAAPA,EAAc,OAASA,EAAII,KAGtCC,EAAkBC,KAAKC,IAAI,EAAG,IAAM,EACpCC,EAAYL,EAAS,SACzBL,GAAOW,QAAU,SAAUC,GACvB,GAAIC,GAASH,EAAUE,EACvB,OAAwB,gBAAVC,IAAsBA,GAAU,GAAeN,GAAVM,IAExDb,EAASD,EAAMC,SAAWD,EAAMC,WACnC,IAAIc,IACJ,SAAWA,GACPA,EAAMC,KAAO,SAAUC,EAAQC,GAC3B,GAAIC,GAAI,EAAGC,EAAeH,EAAOH,MACjC,KAAKK,EAAI,EAAOC,EAAJD,EAAkBA,IAC1BD,EAAOD,EAAOE,GAAIA,EAAGF,IAG7BF,EAAMM,IAAM,SAAUJ,EAAQK,GAC1B,GAAIH,GAAI,EAAGC,EAAeH,EAAOH,MACjC,KAAKK,EAAI,EAAOC,EAAJD,EAAkBA,IAC1B,IAAKG,EAAUL,EAAOE,IAClB,OAAO,CAGf,QAAO,GAEXJ,EAAMQ,IAAM,SAAUN,EAAQK,GAC1B,GAAIH,GAAI,EAAGC,EAAeH,EAAOH,MACjC,KAAKK,EAAI,EAAOC,EAAJD,EAAkBA,IAC1B,GAAIG,EAAUL,EAAOE,IACjB,OAAO,CAGf,QAAO,GAEXJ,EAAMS,IAAM,SAAUP,EAAQQ,GAC1B,GAAmBN,GAAfO,EAAMC,QACNP,EAAeH,EAAOH,MAC1B,KAAKK,EAAI,EAAOC,EAAJD,EAAkBA,IAC1BO,EAAIP,GAAKM,EAAOR,EAAOE,GAE3B,OAAOO,IAEXX,EAAMa,UAAY,SAAUX,EAAQK,GAChC,GAAIH,GAAGC,EAAeH,EAAOH,MAC7B,KAAKK,EAAI,EAAOC,EAAJD,EAAkBA,IAC1B,GAAIG,EAAUL,EAAOE,IACjB,MAAOA,EAGf,OAAO,IAEXJ,EAAMc,eAAiB,SAAUZ,EAAQK,GACrC,GAAIH,GAAGC,EAAeH,EAAOH,MAC7B,KAAKK,EAAI,EAAOC,EAAJD,EAAkBA,IAC1B,GAAIG,EAAUL,EAAOE,IACjB,OAAQA,EAAGF,EAAOE,GAG1B,QAAQ,GAAI,OAEhBJ,EAAMe,OAAS,SAAUb,EAAQK,GAC7B,GAAmBH,GAAfO,EAAMC,QACNP,EAAeH,EAAOH,MAC1B,KAAKK,EAAI,EAAOC,EAAJD,EAAkBA,IACtBG,EAAUL,EAAOE,KACjBO,EAAIK,KAAKd,EAAOE,GAGxB,OAAOO,IAEXX,EAAMiB,MAAQ,SAAUf,GACpB,MAAOF,GAAMS,IAAIP,EAAQjB,EAAMiC,KAEnClB,EAAMmB,cAAgB,SAAUjB,EAAQkB,EAAQC,GAC5C,GAAIC,GAAYrC,EAAMe,MAAMS,IAAIP,EAAQmB,GACpCE,EAAYtC,EAAMe,MAAMS,IAAIW,EAAQC,GACpCG,EAAOlD,EAAGW,MAAMwC,cAAcH,EAAWC,EAC7C,QAAQtC,EAAMe,MAAMQ,IAAIgB,EAAM,SAAUE,GAAQ,MAAOA,GAAKC,eAAe,aAEhF3B,EAAQf,EAAMe,QAAUf,EAAMe,UACjC,IAAI4B,IACJ,SAAWA,GACPA,EAAUC,qBAAuB,SAAUnD,EAASoD,GAChD,QAASvD,EAAEwD,KAAKrD,EAASoD,IAE7BF,EAAUI,cAAgB,SAAUtD,EAASoD,EAAmBlD,EAAqBqD,GACjF,GAAIC,GAActD,IACduD,EAAUD,EAA2B,iBAQzC,OAPIhD,GAAOC,WAAWgD,KAClBA,EAAUA,KAEVF,GACA1D,EAAE6D,OAAOD,EAASF,GAEtB1D,EAAEG,GAASoD,GAAmBK,GACvB5D,EAAEG,IAEbkD,EAAUS,sBAAwB,SAAU3D,EAASoD,EAAmBlD,EAAqBqD,GACpFL,EAAUC,qBAAqBnD,EAASoD,IACzCF,EAAUI,cAActD,EAASoD,EAAmBlD,EAAqBqD,IAGjFL,EAAUU,iBAAmB,SAAU5D,EAASoD,GAC5CxD,EAAGW,MAAMsD,gBAAgBC,mBAAmB9D,EAAS,WAC7CkD,EAAUC,qBAAqBnD,EAASoD,IACxCvD,EAAEG,GAASoD,GAAmB,eAI3CF,EAAY3C,EAAM2C,YAAc3C,EAAM2C,cACzC,IAAIa,IACJ,SAAWC,GACPA,EAAOC,YAAc,SAAUF,GAC3B,GAAIG,GAAWhC,QACXiC,EAAmB,SAAUC,GAC7B9C,EAAMC,KAAK6C,EAAO,SAAUC,GACxBH,EAAS5B,KAAK+B,GACVA,EAAKC,UACLH,EAAiBE,EAAKC,YAKlC,OADAH,GAAiBJ,GACVG,GAEXF,EAAOzB,MAAQ,SAAUwB,GACrB,GAAIQ,GAAa,SAAUH,GACvB,GAAII,GAAalD,EAAMS,IAAIqC,EAAO,SAAUC,GACxC,GAAII,IACAjC,GAAI6B,EAAK7B,GACTkC,KAAML,EAAKK,KACXC,MAAON,EAAKM,MACZC,QAASP,EAAKO,QACdC,WAAYR,EAAKQ,WACjBP,SAAU,KAOd,OALID,GAAKC,SACLG,EAAWH,SAAWC,EAAWF,EAAKC,UAEtCG,EAAWH,YAERG,GAEX,OAAOD,GAEX,OAAOD,GAAWR,KAEvBA,EAAOxD,EAAMwD,OAASxD,EAAMwD,SAC/B,IAAIe,IACJ,SAAWC,GACPA,EAAOC,SAAW,SAAUF,EAAMG,EAAMC,GACpC,GAAIC,GACAC,EACAC,EACAC,EACAC,EACAC,EAAQ,WACR,GAAIC,GAAOlF,EAAMmF,MAAQJ,CAErBH,GADOF,EAAPQ,GAAeA,GAAQ,EACbE,WAAWH,EAAOP,EAAOQ,GAEzB,EACTP,IACDK,EAAST,EAAKc,MAAMP,EAASD,GACxBD,IACDE,EAAUD,EAAO,OAG7B,OAAO,YACHC,EAAUQ,KACVT,EAAOU,UACPR,EAAY/E,EAAMmF,KAClB,IAAIK,GAAUb,IAAcC,CAQ5B,OAPKA,KACDA,EAAUQ,WAAWH,EAAOP,IAE5Bc,IACAR,EAAST,EAAKc,MAAMP,EAASD,GAC7BC,EAAUD,EAAO,MAEdG,IAGfR,EAAOiB,UAAY,SAAUlB,EAAMO,GAE/B,IAAK,GADDD,MACKa,EAAK,EAAGA,EAAKH,UAAUzE,OAAQ4E,IACpCb,EAAKa,EAAK,GAAKH,UAAUG,EAEzBzF,GAAOC,WAAWqE,IAClBA,EAAKc,MAAMP,EAASD,KAG7BN,EAAOvE,EAAMuE,OAASvE,EAAMuE,UAC/BvE,EAAM2F,gBAAkB,SAAUC,GAC9B,MAAM3F,GAAOG,OAAOwF,IAAU3F,EAAOI,YAAYuF,GAGtC,GAFAA,EAAQ,IAIvB5F,EAAMmF,IAAMU,KAAKV,KAAO,WAAe,OAAO,GAAIU,OAAOC,WACzD9F,EAAMiC,GAAK,SAAUQ,GAAQ,MAAOA,KACrCzC,IAAUA,OAEbX,EAAGE,gBAA+B,eAC9BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,WAAYE,EAC3D,IAAIuD,GAAU5D,EAAEG,GAAmB,SAAE,WACjCmG,EAAQlG,GACZ,KAAKkG,IAAS,CACV,GAAIG,GAAW7C,EAAQ8C,OACnBD,IACAH,EAAMG,GAGd,GAAIE,GAAkB,SAAUC,GAC5B,MAAO,YACHN,EAAM1C,EAAQ8C,SACVE,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,YAIrCrC,GAAQiD,SAAWF,EAAgB/C,EAAQiD,WAE/CrG,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IAClCJ,GAAEG,GAAmB,SAAE,WAAWuG,UAAYJ,GAC9CtG,EAAEG,GAAmB,SAAE,SAAUmG,KAI7CvG,EAAGE,gBAAgC,gBAC/BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpE,GAAIwG,GAAYrG,EAAM2C,UAAUI,cAActD,EAAS,WAAYE,GAC/DuD,EAAUmD,EAAoB,SAAE,WAChCC,EAAgBpD,EAAQoD,aAC5BpD,GAAQoD,cAAgB,SAAUC,GAC9B,GAAItF,GAASvB,GACbuB,GAAOsF,GACHD,GACAA,EAAcjB,MAAM/F,EAAEG,GAAU8F,YAGxCvF,EAAM2C,UAAUU,iBAAiB5D,EAAS,aAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI2G,GAASnH,EAAGW,MAAMoG,iBAAiB1G,IACvCJ,GAAEG,GAAmB,SAAE,WAAY+G,KAG3CnH,EAAGE,gBAAgC,gBAC/BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,WAAYE,EAC3D,IAAI8G,GAAYnH,EAAEG,GAAmB,SAAE,YACnCO,GAAMe,MAAMM,IAAIoF,EAAW,SAAUhE,GAAQ,OAAQA,KACrDnD,EAAEG,GAAmB,SAAE,eAE3B,IAAI+G,GAAS9G,GACR8G,MAAgC,IAApBA,IAAS1F,SACtB2F,EAAYnH,EAAEG,GAAmB,SAAE,aACnC+G,EAAOC,GAEX,IAAIvD,GAAU5D,EAAEG,GAAmB,SAAE,UACrCyD,GAAQwD,UAAW,CACnB,IAAIT,GAAkB,SAAUC,GAC5B,MAAO,YACHO,EAAYnH,EAAEG,GAAmB,SAAE,aACnC+G,EAAOC,GACHP,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,YAGrCrC,GAAQiD,SAAWF,EAAgB/C,EAAQiD,UAC3CjD,EAAQyD,WAAaV,EAAgB/C,EAAQyD,YAC7C3G,EAAM2C,UAAUU,iBAAiB5D,EAAS,aAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI2G,GAASnH,EAAGW,MAAMoG,iBAAiB1G,IACvCJ,GAAEG,GAAmB,SAAE,YAAa+G,KAG5CnH,EAAGE,gBAA+B,eAC9BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,WAAYE,EAC3D,IAAIiG,GAAQlG,GACZ,KAAKkG,IAAS,CACV,GAAIG,GAAWzG,EAAEG,GAAmB,SAAE,WAClCsG,IACAH,EAAMG,GAGd,GAAI7C,GAAU5D,EAAEG,GAAmB,SAAE,UACrCyD,GAAQwD,UAAW,CACnB,IAAIT,GAAkB,SAAUC,GAC5B,MAAO,YACHN,EAAMtG,EAAEG,GAAmB,SAAE,aACzByG,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,YAGrCrC,GAAQiD,SAAWF,EAAgB/C,EAAQiD,UAC3CjD,EAAQyD,WAAaV,EAAgB/C,EAAQyD,YAC7C3G,EAAM2C,UAAUU,iBAAiB5D,EAAS,aAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IAClCJ,GAAEG,GAAmB,SAAE,cAAgBmG,GACvCtG,EAAEG,GAAmB,SAAE,WAAYmG,KAG/CvG,EAAGE,gBAA8B,cAC7BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,WAAYE,EAC3D,IAAIiG,GAAQlG,GACZ,KAAKkG,IAAS,CACV,GAAIG,GAAWzG,EAAEG,GAAmB,SAAE,UAClCsG,IACAH,EAAMG,GAGd,GAAI7C,GAAU5D,EAAEG,GAAmB,SAAE,WACjCmH,EAAetH,EAAEG,GAAgB,MAAE,UACvCyD,GAAQwD,UAAW,CACnB,IAAIT,GAAkB,SAAUC,GAC5B,MAAO,YACHd,WAAW,WACP,GAAIyB,GAAQvH,EAAEwD,KAAKrD,GAASoH,KAExBjB,GADAiB,EAAMnE,eAAe,gBACfmE,EAAMC,aAGNxH,EAAEwD,KAAKrD,GAASoH,MAAME,gBAEjC,GACCb,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,YAGrCqB,GAAaI,SAAWf,EAAgBW,EAAaI,UACrDhH,EAAM2C,UAAUU,iBAAiB5D,EAAS,aAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IAClCJ,GAAEG,GAAmB,SAAE,aAAemG,GACtCtG,EAAEG,GAAmB,SAAE,UAAWmG,KAI9CvG,EAAGE,gBAAiC,iBAChCC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpE,GAAIoH,GAAajH,EAAM2C,UAAUI,cAActD,EAAS,YAAaE,GACjEuD,EAAU+D,EAAsB,UAAE,WAClCX,EAAgBpD,EAAQoD,aAC5BpD,GAAQoD,cAAgB,SAAUxD,GAC9B,GAAI7B,GAASvB,GACbuB,GAAO6B,EAAKoE,MACRZ,GACAA,EAAcjB,MAAM/F,EAAEG,GAAU8F,WAEpCvF,EAAM2C,UAAUU,iBAAiB5D,EAAS,eAGlDK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI2G,GAASnH,EAAGW,MAAMoG,iBAAiB1G,KACnCwD,EAAU5D,EAAEG,GAAoB,UAAE,WAClC2C,EAAa,SAAUK,GAAQ,MAAOA,GAAKS,EAAQiE,UACnDC,EAAgB9H,EAAEG,GAAoB,UAAE,QAAQ4H,SAAS,WAAWH,IACnElH,GAAMe,MAAMmB,cAAckF,EAAeZ,EAAQpE,IAClD9C,EAAEG,GAAoB,UAAE,QAAQ4H,SAAS,WAAYb,KAGjEnH,EAAGE,gBAAiC,iBAChCC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,YAAaE,GAAuB+G,UAAU,GAC7F,IAAID,GAAYnH,EAAEG,GAAoB,UAAE,YACpCO,GAAMe,MAAMM,IAAIoF,EAAW,SAAUhE,GAAQ,OAAQA,KACrDnD,EAAEG,GAAoB,UAAE,eAE5B,IAAI+G,GAAS9G,GACR8G,MAAgC,IAApBA,IAAS1F,SACtB2F,EAAYnH,EAAEG,GAAoB,UAAE,aAChCgH,GACAD,EAAOC,GAGf,IAAIa,GAAQhI,EAAEG,GAAoB,UAAE,QAChCyD,EAAU5D,EAAEG,GAAoB,UAAE,WAClC8H,EAAcD,EAAMD,SAAS,WAC7BT,EAAetH,EAAEG,GAAgB,MAAE,UACvCyD,GAAQwD,UAAW,EACnBa,EAAYC,cAAe,CAC3B,IAAIvB,GAAkB,SAAUC,GAC5B,MAAO,YACH,GAAIuB,GAAcnI,EAAEG,GAAoB,UAAE,YACrCO,GAAMe,MAAMmB,cAAcsE,IAAUiB,EAAazH,EAAMiC,MACxDuE,EAAOiB,GACHvB,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,aAKzCqB,GAAaI,SAAWf,EAAgBW,EAAaI,UACrDhH,EAAM2C,UAAUU,iBAAiB5D,EAAS,cAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI2G,GAASxG,EAAMe,MAAMS,IAAInC,EAAGW,MAAMoG,iBAAiB1G,KAAkB,SAAUgI,GAAK,MAAO1H,GAAM2F,gBAAgB+B,KACjHC,EAAYrI,EAAEG,GAAoB,UAAE,YAC1BH,GAAEG,GAAoB,UAAE,UAClC+G,GACKxG,EAAMe,MAAMmB,cAAcyF,EAAWnB,EAAQxG,EAAMiC,KACpD3C,EAAEG,GAAoB,UAAE,YAAa+G,GAGzClH,EAAEG,GAAoB,UAAE,WAIpCJ,EAAGE,gBAAgC,gBAC/BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,YAAaE,GAAuB+G,UAAU,GAC7F,IAAId,GAAQlG,GACZ,KAAKkG,IAAS,CACV,GAAIG,GAAWzG,EAAEG,GAAoB,UAAE,WACnCsG,IACAH,EAAMG,GAEd,GAAIuB,GAAQhI,EAAEG,GAAoB,UAAE,QAChCyD,EAAU5D,EAAEG,GAAoB,UAAE,WAClC8H,EAAcD,EAAMD,SAAS,WAC7BT,EAAetH,EAAEG,GAAgB,MAAE,UACvCyD,GAAQwD,UAAW,EACnBa,EAAYC,cAAe,CAC3B,IAAIvB,GAAkB,SAAUC,GAC5B,MAAO,YACH,GAAI0B,GAAatI,EAAEG,GAAoB,UAAE,WACrCmG,OAAYgC,IACZhC,EAAMgC,GACF1B,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,aAKzCqB,GAAaI,SAAWf,EAAgBW,EAAaI,UACrDhH,EAAM2C,UAAUU,iBAAiB5D,EAAS,cAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQ5F,EAAM2F,gBAAgBtG,EAAGW,MAAMoG,iBAAiB1G,MACxDmI,EAAWvI,EAAEG,GAAoB,UAAE,WACzBH,GAAEG,GAAoB,UAAE,UAClCmG,GACIiC,IAAajC,GACbtG,EAAEG,GAAoB,UAAE,WAAYmG,GAGxCtG,EAAEG,GAAoB,UAAE,WAKpCJ,EAAGE,gBAAiC,iBAChCC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpE,GAAIiI,GAAa9H,EAAM2C,UAAUI,cAActD,EAAS,YAAaE,GACjEuD,EAAU4E,EAAsB,UAAE,WAClCxB,EAAgBpD,EAAQoD,aAC5BpD,GAAQoD,cAAgB,SAAUxC,EAAMhB,GACpC,GAAI7B,GAASvB,IACTqI,EAAW/H,EAAMwD,KAAKE,YAAYzC,SAClC+G,EAAWhI,EAAMwD,KAAKE,YAAYpE,EAAEG,GAAoB,UAAE,QAAQ+D,KAAK,YACtExD,GAAMe,MAAMmB,cAAc6F,EAAUC,EAAUhI,EAAMiC,MACrDhB,EAAOjB,EAAMwD,KAAKxB,MAAMc,IACpBwD,GACAA,EAAcjB,MAAM/F,EAAEG,GAAU8F,aAI5CvF,EAAM2C,UAAUU,iBAAiB5D,EAAS,cAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI2G,GAASnH,EAAGW,MAAMoG,iBAAiB1G,SACnCqI,EAAW/H,EAAMwD,KAAKE,YAAYpE,EAAEG,GAAoB,UAAE,QAAQ+D,KAAK,aACvEwE,EAAWhI,EAAMwD,KAAKE,YAAY8C,EACjCxG,GAAMe,MAAMmB,cAAc6F,EAAUC,EAAUhI,EAAMiC,KACrD3C,EAAEG,GAAoB,UAAE,WAAYO,EAAMwD,KAAKxB,MAAMwE,MAIjEnH,EAAGE,gBAAiC,iBAChCC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,YAAaE,GAAuB+G,UAAU,GAC7F,IAAID,GAAYnH,EAAEG,GAAoB,UAAE,YACpCO,GAAMe,MAAMM,IAAIoF,EAAW,SAAUhE,GAAQ,OAAQA,KACrDnD,EAAEG,GAAoB,UAAE,eAE5B,IAAI+G,GAAS9G,GACR8G,MAAgC,IAApBA,IAAS1F,SACtB2F,EAAYnH,EAAEG,GAAoB,UAAE,aAChCgH,GACAD,EAAOC,GAGf,IAAIR,GAAkB,SAAUC,GAC5B,MAAO,YACH,GAAIuB,GAAcnI,EAAEG,GAAoB,UAAE,YACrCO,GAAMe,MAAMmB,cAAcsE,IAAUiB,EAAazH,EAAMiC,MACxDuE,EAAOiB,GACHvB,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,cAKrCrC,EAAU5D,EAAEG,GAAoB,UAAE,WAClCmH,EAAetH,EAAEG,GAAgB,MAAE,UACnCyD,GAAQwD,YAAa,GACrBxD,EAAQ8D,SAAWf,EAAgB/C,EAAQ8D,UAC3C9D,EAAQwD,UAAW,EACnBpH,EAAEG,GAAoB,UAAEyD,IAGxB0D,EAAaI,SAAWf,EAAgBW,EAAaI,UAEzDhH,EAAM2C,UAAUU,iBAAiB5D,EAAS,cAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAIoI,GAAK5I,EAAGW,MAAMoG,iBAAiB1G,KAC/B8G,EAAYyB,EAAMjI,EAAMe,MAAMS,IAAIyG,EAAIjI,EAAM2F,oBAC5CgC,EAAYrI,EAAEG,GAAoB,UAAE,YACpC+G,GAAO1F,OAAS,EACXd,EAAMe,MAAMmB,cAAcyF,EAAWnB,EAAQxG,EAAMiC,KACpD3C,EAAEG,GAAoB,UAAE,YAAa+G,GAIzClH,EAAEG,GAAoB,UAAE,WAIpCJ,EAAGE,gBAAgC,gBAC/BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,YAAaE,GAAuB+G,UAAU,GAC7F,IAAId,GAAQlG,GACZ,KAAKkG,IAAS,CACV,GAAIG,GAAWzG,EAAEG,GAAoB,UAAE,WACnCsG,IACAH,EAAMG,GAEd,GAAIE,GAAkB,SAAUC,GAC5B,MAAO,YACH,GAAIgC,GAAW5I,EAAEG,GAAoB,UAAE,WACnCmG,KAAUsC,IACVtC,EAAMsC,GACFhC,GACAA,EAAOb,MAAM/F,EAAEG,GAAU8F,cAKrCrC,EAAU5D,EAAEG,GAAoB,UAAE,WAClCmH,EAAetH,EAAEG,GAAgB,MAAE,UACnCyD,GAAQwD,YAAa,GACrBxD,EAAQ8D,SAAWf,EAAgB/C,EAAQ8D,UAC3C9D,EAAQwD,UAAW,EACnBpH,EAAEG,GAAoB,UAAEyD,IAGxB0D,EAAaI,SAAWf,EAAgBW,EAAaI,UAEzDhH,EAAM2C,UAAUU,iBAAiB5D,EAAS,cAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,KAClCmI,EAAWvI,EAAEG,GAAoB,UAAE,WACnCmG,GACIA,IAAUiC,GACVvI,EAAEG,GAAoB,UAAE,WAAYmG,GAIxCtG,EAAEG,GAAoB,UAAE,WAKpC,WACI,GAAI0I,GAA2B,SAAU1I,GACrCJ,EAAGW,MAAMsD,gBAAgBC,mBAAmB9D,EAAS,WAC7CO,EAAM2C,UAAUC,qBAAqBnD,EAAS,aAC9CH,EAAEG,GAASqD,KAAK,WAAY,SAIpCsF,EAAa,SAAU3I,GAAW,MAAOH,GAAEG,GAAmB,SAAE,WAAW0H,SAAW,KAC1F9H,GAAGE,gBAAgC,gBAC/BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpE,GAAIwI,GAAYrI,EAAM2C,UAAUI,cAActD,EAAS,WAAYE,GAC/DuD,EAAUmF,EAAoB,SAAE,WAChC/B,EAAgBpD,EAAQoD,aAC5BpD,GAAQoD,cAAgB,SAAUC,GAC9B,GAAIX,GAAQlG,GACZkG,GAAMW,EAAMW,MACZlH,EAAMuE,KAAKkB,UAAUa,EAAehH,EAAEG,GAAU8F,YAEpD4C,EAAyB1I,IAE7BK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI2G,GAASnH,EAAGW,MAAMoG,iBAAiB1G,IACvCJ,GAAEG,GAAmB,SAAE,WAAY+G,KAG3CnH,EAAGE,gBAAgC,gBAC/BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,WAAYE,GAAuB6H,cAAc,GAChG,IAAIL,GAAUiB,EAAW3I,GACrB+G,EAAS9G,GACb,IAAI8G,KAAYA,IAAS1F,OAAS,EAAG,CACjC,GAAI2F,GAAYzG,EAAMe,MAAMiB,MAAM1C,EAAEG,GAAmB,SAAE,iBACzD+G,GAAOC,GAEX,GAAIvD,GAAU5D,EAAEG,GAAmB,SAAE,UACrCyD,GAAQsE,cAAe,CACvB,IAAIvB,GAAkB,SAAUC,GAC5B,MAAO,YACH,GAAIoC,GAAahJ,EAAEG,GAAmB,SAAE,gBACnCO,GAAMe,MAAMmB,cAAcsE,IAAU8B,EAAY,SAAU7F,GAAQ,MAAOA,GAAK0E,OAC/EX,EAAOxG,EAAMe,MAAMiB,MAAMsG,IACzBtI,EAAMuE,KAAKkB,UAAUS,EAAQ5G,EAAEG,GAAU8F,aAIrDrC,GAAQiD,SAAWF,EAAgB/C,EAAQiD,UAC3CjD,EAAQyD,WAAaV,EAAgB/C,EAAQyD,YAC7CzD,EAAQqF,YAActC,EAAgB/C,EAAQqF,aAC9CrF,EAAQsF,cAAgBvC,EAAgB/C,EAAQsF,eAChDL,EAAyB1I,IAE7BK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAIsH,GAAUiB,EAAW3I,GACrB+G,EAASnH,EAAGW,MAAMoG,iBAAiB1G,KACnCwD,EAAU5D,EAAEG,GAAmB,SAAE,UACrC,IAAI+G,GAAUA,EAAO1F,OAAS,EAAG,CAC7B,GAAIgC,GAAOxD,EAAEG,GAAmB,SAAE,WAC9BgJ,KACAC,IACJ1I,GAAMe,MAAMC,KAAKwF,EAAQ,SAAUZ,EAAO+C,EAAOV,GAC7C,GAAIW,GAAK5I,EAAMe,MAAMc,eAAeiB,EAAKoE,KAAM,SAAUzE,GAAQ,MAAOA,GAAK0E,IAAYvB,EAAMuB,KAAc0B,EAAWD,EAAG,GAAInG,EAAOmG,EAAG,EACrInG,KAASmD,IACLnD,EACA+D,EAAOmC,GAASlG,EAGhBiG,EAAmB3G,KAAK4G,IAG5BE,GAAY,GACZJ,EAAa1G,KAAK8G,KAG1B7I,EAAMe,MAAMC,KAAK0H,EAAoB,SAAUI,GAC3CtC,EAAOuC,OAAOD,EAAc,IAEhC,IAAIN,GAAgBtF,EAAQsF,cACxBrC,EAAWjD,EAAQiD,QACvBjD,GAAQsF,cAAgBtF,EAAQiD,SAAW,aAC3C7G,EAAEG,GAAmB,SAAE,eACvBO,EAAMe,MAAMC,KAAKyH,EAAc,SAAUO,GACrC1J,EAAEG,GAAmB,SAAE,YAAauJ,KAExC9F,EAAQsF,cAAgBA,EACxBtF,EAAQiD,SAAWA,MAGnB7G,GAAEG,GAAmB,SAAE,iBAInCJ,EAAGE,gBAA+B,eAC9BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,WAAYE,GAAuB6H,cAAc,GAChG,IACI5B,IADUwC,EAAW3I,GACbC,IACZ,IAAIkG,IAAS,CACT,GAAIG,GAAWzG,EAAEG,GAAmB,SAAE,cACtCmG,GAAMG,GAEV,GAAI7C,GAAU5D,EAAEG,GAAmB,SAAE,UACrCyD,GAAQsE,cAAe,CACvB,IAAIvB,GAAkB,SAAUC,GAC5B,MAAO,YACH,GAAI+C,GAAW3J,EAAEG,GAAmB,SAAE,cAClCwJ,KAAarD,KACbA,EAAMqD,GAEVjJ,EAAMuE,KAAKkB,UAAUS,EAAQ5G,EAAEG,GAAU8F,aAG7C2D,EAAsB,SAAUhD,GAChC,MAAO,YACHN,EAAM,MACN5F,EAAMuE,KAAKkB,UAAUS,EAAQ5G,EAAEG,GAAU8F,aAG7C4D,EAAoB,SAAUjD,GAC9B,MAAO,YACH,GAAIpD,GAAOxD,EAAEG,GAAmB,SAAE,UAClCmG,GAAM9C,EAAKoE,MACXlH,EAAMuE,KAAKkB,UAAUS,EAAQ5G,EAAEG,GAAU8F,YAGjDrC,GAAQiD,SAAWF,EAAgB/C,EAAQiD,UAC3CjD,EAAQyD,WAAaV,EAAgB/C,EAAQyD,YAC7CzD,EAAQqF,YAAcY,EAAkBjG,EAAQqF,aAChDrF,EAAQsF,cAAgBU,EAAoBhG,EAAQsF,eACpDL,EAAyB1I,IAE7BK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAIsH,GAAUiB,EAAW3I,GACrBmG,EAAQlG,GACEJ,GAAEG,GAAmB,SAAE,UACrC,IAAImG,IAAS,CACT,GAAI5F,EAAMC,OAAOW,QAAQgF,KACrB,MACJ,IAAIG,GAAWzG,EAAEG,GAAmB,SAAE,cACtC,IAAIsG,GACIA,EAASoB,KAAavB,IAAQuB,GAI9B,YAHIpB,IAAaH,KACbA,EAAMG,GAKlB,IAAIjD,GAAOxD,EAAEG,GAAmB,SAAE,WAC9BmJ,EAAK5I,EAAMe,MAAMc,eAAeiB,EAAKoE,KAAM,SAAUzE,GAAQ,MAAOA,GAAK0E,KAAavB,IAAQuB,KAAc0B,EAAWD,EAAG,EAAWA,GAAG,EAC7H,GAAXC,EACAjD,EAAM,MAGNtG,EAAEG,GAAmB,SAAE,YAAaoJ,OAIxCvJ,GAAEG,GAAmB,SAAE,oBAMvCJ,EAAGE,gBAA8B,cAC7BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,UAAWE,EAC1D,IAAIuD,GAAU5D,EAAEG,GAAkB,QAAE,WAChCmG,EAAQlG,GACZ,KAAKkG,IAAS,CACV,GAAIG,GAAWzG,EAAEG,GAAkB,QAAE,WACjCsG,IACAH,EAAMG,GAGd,GAAIE,GAAkB,SAAUC,GAC5B,MAAO,YACHN,EAAMtG,EAAEG,GAAkB,QAAE,aAC5BO,EAAMuE,KAAKkB,UAAUS,EAAQ5G,EAAEG,GAAU8F,YAGjDrC,GAAQiD,SAAWF,EAAgB/C,EAAQiD,UAC3CnG,EAAM2C,UAAUU,iBAAiB5D,EAAS,YAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IAClCJ,GAAEG,GAAkB,QAAE,cAAgBmG,GACtCtG,EAAEG,GAAkB,QAAE,WAAYmG,KAK9CvG,EAAGE,gBAAkC,kBACjCC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,cAAeE,EAC9D,IAAIuD,GAAU5D,EAAEG,GAAgB,MAAE,WAC9BmG,EAAQlG,GACZ,KAAKkG,IAAS,CACV,GAAIG,GAAWzG,EAAEG,GAAsB,YAAE,WACrCsG,IACAH,EAAMG,GAGd,GAAIE,GAAkB,SAAUC,GAC5B,MAAO,YACHN,EAAMtG,EAAEG,GAAsB,YAAE,aAChCO,EAAMuE,KAAKkB,UAAUS,EAAQ5G,EAAEG,GAAU8F,YAGjDrC,GAAQ8D,SAAWf,EAAgB/C,EAAQ8D,UAC3ChH,EAAM2C,UAAUU,iBAAiB5D,EAAS,gBAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IAClCJ,GAAEG,GAAsB,YAAE,cAAgBmG,GAC1CtG,EAAEG,GAAsB,YAAE,WAAYmG,KAKlDvG,EAAGE,gBAAgC,gBAC/BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,YAAaE,EAC5D,IAAIiG,GAAQlG,GACPkG,MACDA,EAAMwD,WAAW9J,EAAEG,GAAoB,UAAE,aAE7C,IAAI4J,GAAkB/J,EAAEG,GAAkB,SAAMH,EAAEG,GAAqB,UACnEyD,EAAUmG,EAAeC,KAAKhK,EAAEG,GAAU,WAC1CuH,EAAW9D,EAAQ8D,QACvB9D,GAAQ8D,SAAW,SAAUkB,EAAUqB,GACnCrB,EAAWkB,WAAWlB,GACtBtC,EAAQlG,IACJkG,MAAYsC,IACZtC,EAAMsC,GACNlI,EAAMuE,KAAKkB,UAAUuB,EAAU1H,EAAEG,GAAU8F,aAGnDvF,EAAM2C,UAAUU,iBAAiB5D,EAAS,cAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IACtCJ,GAAEG,GAAoB,UAAE,WAAYmG,GAChCtG,EAAEG,GAAoB,UAAE,YACxBH,EAAEG,GAAS+J,YAAY,uBAGnBlK,EAAEG,GAAoB,UAAE,WAAWgK,UACnCnK,EAAEG,GAASiK,SAAS,yBAMpCrK,EAAGE,gBAAoC,oBACnCC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,gBAAiBE,EAChE,IAAIiG,GAAQlG,GACPkG,MACDA,EAAMwD,WAAW9J,EAAEG,GAAwB,cAAE,aAEjD,IAAI4J,GAAkB/J,EAAEG,GAAkB,SAAMH,EAAEG,GAAqB,UACnEyD,EAAUmG,EAAeC,KAAKhK,EAAEG,GAAU,WAC1CuH,EAAW9D,EAAQ8D,QACvB9D,GAAQ8D,SAAW,SAAUkB,EAAUqB,GACnCrB,EAAWkB,WAAWlB,GACtBtC,EAAQlG,IACJkG,MAAYsC,IACZtC,EAAMsC,GACNlI,EAAMuE,KAAKkB,UAAUuB,EAAU1H,EAAEG,GAAU8F,aAGnDvF,EAAM2C,UAAUU,iBAAiB5D,EAAS,kBAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IACtCJ,GAAEG,GAAwB,cAAE,WAAYmG,EACxC,IAAI+D,GAAiBrK,EAAEG,GAAwB,cAAE,WAC7CkK,IACArK,EAAEG,GAAS+J,YAAY,uBACnBG,IAAmB/D,GACnBlG,IAAgB0J,WAAWO,KAI3BrK,EAAEG,GAAwB,cAAE,WAAWgK,UACvCnK,EAAEG,GAASiK,SAAS,yBAKpCrK,EAAGE,gBAAkC,kBACjCC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,cAAeE,EAC9D,IAAIiG,GAAQlG,GACPkG,MACDA,EAAMtG,EAAEG,GAAsB,YAAE,YAEpC,IAAIyD,GAAU5D,EAAEG,GAAsB,YAAE,WACpCuH,EAAW9D,EAAQ8D,QACvB9D,GAAQ8D,SAAW,SAAUkB,EAAUqB,GACnCrB,EAAWkB,WAAWlB,EACtB,IAAItC,GAAQlG,GACRkG,OAAYsC,IACZtC,EAAMsC,GACFlB,GACAA,EAAS3B,MAAMC,KAAMC,aAIjCvF,EAAM2C,UAAUU,iBAAiB5D,EAAS,gBAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IACtCJ,GAAEG,GAAsB,YAAE,WAAYmG,EACtC,IAAIgE,GAAetK,EAAEG,GAAsB,YAAE,WACzCmG,KAAUgE,GACVlK,IAAgBkK,KAK5BvK,EAAGE,gBAA6B,aAC5BC,KAAM,SAAUC,EAASC,EAAeC,EAAqBC,EAAWC,GACpEG,EAAM2C,UAAUS,sBAAsB3D,EAAS,SAAUE,EACzD,IAAIiG,GAAQlG,GACPkG,MACDA,EAAMtG,EAAEG,GAAiB,OAAE,YAE/B,IAAIyD,GAAU5D,EAAEG,GAAiB,OAAE,WAC/BuH,EAAW9D,EAAQ8D,QACvB9D,GAAQ8D,SAAW,SAAUkB,EAAUqB,GAC/BrB,IAAatC,MACbA,EAAMsC,GACFlB,GACAA,EAAS3B,MAAMC,KAAMC,aAIjCvF,EAAM2C,UAAUU,iBAAiB5D,EAAS,WAE9CK,OAAQ,SAAUL,EAASC,EAAeC,EAAqBC,EAAWC,GACtE,GAAI+F,GAAQvG,EAAGW,MAAMoG,iBAAiB1G,IAClCJ,GAAEG,GAAiB,OAAE,cAAgBmG,GACrCtG,EAAEG,GAAiB,OAAE,WAAYmG","file":"knockout-easyui.amd.js","sourcesContent":["/// <reference path=\"../src/typings/requirejs/require.d.ts\" />\r\n/// <reference path=\"../src/typings/jquery/jquery.d.ts\" />\r\n/// <reference path=\"../src/typings/knockout/knockout.d.ts\" />\r\n\r\n(function (factory) {\r\n    if (window.define && window.define.amd) {\r\n        window.define([\"knockout\", \"jquery\", \"jquery.jeasyui\"], function (ko, $) {\r\n            factory(ko, $)\r\n        });\r\n    } else {\r\n        factory(window[\"ko\"], window[\"jQuery\"]);\r\n    }\r\n})(function(ko,$){\nko.bindingHandlers[\"easyuiOptions\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) { },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) { },\n    easyuiOptionsVersion: '0.6.1'\n};\n\nvar utils;\n(function (utils) {\n    var object;\n    (function (object) {\n        object.isFunction = function (obj) { return typeof obj === 'function'; };\n        object.isNull = function (obj) {\n            return obj === null;\n        };\n        object.isUndefined = function (obj) {\n            return obj === void 0;\n        };\n        var property = function (key) {\n            return function (obj) {\n                return obj == null ? void 0 : obj[key];\n            };\n        };\n        var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n        var getLength = property('length');\n        object.isArray = function (collection) {\n            var length = getLength(collection);\n            return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n        };\n    })(object = utils.object || (utils.object = {}));\n    var array;\n    (function (array) {\n        array.each = function (source, action) {\n            var i = 0, sourceLength = source.length;\n            for (i = 0; i < sourceLength; i++) {\n                action(source[i], i, source);\n            }\n        };\n        array.all = function (source, predictor) {\n            var i = 0, sourceLength = source.length;\n            for (i = 0; i < sourceLength; i++) {\n                if (!predictor(source[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        array.any = function (source, predictor) {\n            var i = 0, sourceLength = source.length;\n            for (i = 0; i < sourceLength; i++) {\n                if (predictor(source[i])) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        array.map = function (source, mapper) {\n            var ret = Array(), i;\n            var sourceLength = source.length;\n            for (i = 0; i < sourceLength; i++) {\n                ret[i] = mapper(source[i]);\n            }\n            return ret;\n        };\n        array.findIndex = function (source, predictor) {\n            var i, sourceLength = source.length;\n            for (i = 0; i < sourceLength; i++) {\n                if (predictor(source[i])) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        array.findIndexTuple = function (source, predictor) {\n            var i, sourceLength = source.length;\n            for (i = 0; i < sourceLength; i++) {\n                if (predictor(source[i])) {\n                    return [i, source[i]];\n                }\n            }\n            return [-1, null];\n        };\n        array.filter = function (source, predictor) {\n            var ret = Array(), i;\n            var sourceLength = source.length;\n            for (i = 0; i < sourceLength; i++) {\n                if (predictor(source[i])) {\n                    ret.push(source[i]);\n                }\n            }\n            return ret;\n        };\n        array.clone = function (source) {\n            return array.map(source, utils.id);\n        };\n        array.sequenceEqual = function (source, target, idSelector) {\n            var sourceIds = utils.array.map(source, idSelector);\n            var targetIds = utils.array.map(target, idSelector);\n            var diff = ko.utils.compareArrays(sourceIds, targetIds);\n            return !utils.array.any(diff, function (item) { return item.hasOwnProperty('index'); });\n        };\n    })(array = utils.array || (utils.array = {}));\n    var component;\n    (function (component) {\n        component.checkComponentInited = function (element, componentTypeName) {\n            return !!$.data(element, componentTypeName);\n        };\n        component.initComponent = function (element, componentTypeName, allBindingsAccessor, extOptions) {\n            var allBindings = allBindingsAccessor();\n            var options = allBindings['easyuiOptions'] || {};\n            if (object.isFunction(options)) {\n                options = options();\n            }\n            if (extOptions) {\n                $.extend(options, extOptions);\n            }\n            $(element)[componentTypeName](options);\n            return $(element);\n        };\n        component.ensureComponentInited = function (element, componentTypeName, allBindingsAccessor, extOptions) {\n            if (!component.checkComponentInited(element, componentTypeName)) {\n                component.initComponent(element, componentTypeName, allBindingsAccessor, extOptions);\n            }\n        };\n        component.bindDisposeEvent = function (element, componentTypeName) {\n            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n                if (component.checkComponentInited(element, componentTypeName)) {\n                    $(element)[componentTypeName]('destroy');\n                }\n            });\n        };\n    })(component = utils.component || (utils.component = {}));\n    var tree;\n    (function (tree_1) {\n        tree_1.treeToArray = function (tree) {\n            var tmpNodes = Array();\n            var innerTreeToNodes = function (nodes) {\n                array.each(nodes, function (node) {\n                    tmpNodes.push(node);\n                    if (node.children) {\n                        innerTreeToNodes(node.children);\n                    }\n                });\n            };\n            innerTreeToNodes(tree);\n            return tmpNodes;\n        };\n        tree_1.clone = function (tree) {\n            var innerClone = function (nodes) {\n                var clonedTree = array.map(nodes, function (node) {\n                    var clonedNode = {\n                        id: node.id,\n                        text: node.text,\n                        state: node.state,\n                        checked: node.checked,\n                        attributes: node.attributes,\n                        children: null\n                    };\n                    if (node.children)\n                        clonedNode.children = innerClone(node.children);\n                    else {\n                        clonedNode.children = [];\n                    }\n                    return clonedNode;\n                });\n                return clonedTree;\n            };\n            return innerClone(tree);\n        };\n    })(tree = utils.tree || (utils.tree = {}));\n    var func;\n    (function (func_1) {\n        func_1.debounce = function (func, wait, immediate) {\n            var timeout;\n            var args;\n            var context;\n            var timestamp;\n            var result;\n            var later = function () {\n                var last = utils.now() - timestamp;\n                if (last < wait && last >= 0)\n                    timeout = setTimeout(later, wait - last);\n                else\n                    timeout = 0;\n                if (!immediate) {\n                    result = func.apply(context, args);\n                    if (!timeout)\n                        context = args = null;\n                }\n            };\n            return function () {\n                context = this;\n                args = arguments;\n                timestamp = utils.now();\n                var callNow = immediate && !timeout;\n                if (!timeout) {\n                    timeout = setTimeout(later, wait);\n                }\n                if (callNow) {\n                    result = func.apply(context, args);\n                    context = args = null;\n                }\n                return result;\n            };\n        };\n        func_1.safeApply = function (func, context) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            if (object.isFunction(func)) {\n                func.apply(context, args);\n            }\n        };\n    })(func = utils.func || (utils.func = {}));\n    utils.convertToString = function (value) {\n        if (!(object.isNull(value) || object.isUndefined(value)))\n            return value + '';\n        else\n            return '';\n    };\n    utils.now = Date.now || (function () { return new Date().getTime(); });\n    utils.id = function (item) { return item; };\n})(utils || (utils = {}));\n\nko.bindingHandlers[\"calendarValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"calendar\", allBindingsAccessor);\n        var options = $(element)[\"calendar\"]('options');\n        var value = valueAccessor();\n        if (!value()) {\n            var curValue = options.current;\n            if (curValue) {\n                value(curValue);\n            }\n        }\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                value(options.current);\n                if (oriFun) {\n                    oriFun.apply($(element), arguments);\n                }\n            };\n        };\n        options.onSelect = refreshValueFun(options.onSelect);\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if ($(element)[\"calendar\"]('options').current !== value)\n            $(element)[\"calendar\"]('moveTo', value);\n    }\n};\n\nko.bindingHandlers[\"comboboxSource\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $combobox = utils.component.initComponent(element, \"combobox\", allBindingsAccessor);\n        var options = $combobox[\"combobox\"]('options');\n        var onLoadSuccess = options.onLoadSuccess;\n        options.onLoadSuccess = function (datas) {\n            var source = valueAccessor();\n            source(datas);\n            if (onLoadSuccess) {\n                onLoadSuccess.apply($(element), arguments);\n            }\n        };\n        utils.component.bindDisposeEvent(element, \"combobox\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var values = ko.utils.unwrapObservable(valueAccessor());\n        $(element)[\"combobox\"]('loadData', values);\n    }\n};\nko.bindingHandlers[\"comboboxValues\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"combobox\", allBindingsAccessor);\n        var curValues = $(element)[\"combobox\"]('getValues');\n        if (utils.array.all(curValues, function (item) { return !item; })) {\n            $(element)[\"combobox\"]('setValues', []);\n        }\n        var values = valueAccessor();\n        if (!values() || values().length === 0) {\n            curValues = $(element)[\"combobox\"]('getValues');\n            values(curValues);\n        }\n        var options = $(element)[\"combobox\"]('options');\n        options.multiple = true;\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                curValues = $(element)[\"combobox\"]('getValues');\n                values(curValues);\n                if (oriFun)\n                    oriFun.apply($(element), arguments);\n            };\n        };\n        options.onSelect = refreshValueFun(options.onSelect);\n        options.onUnselect = refreshValueFun(options.onUnselect);\n        utils.component.bindDisposeEvent(element, \"combobox\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var values = ko.utils.unwrapObservable(valueAccessor());\n        $(element)[\"combobox\"]('setValues', values);\n    }\n};\nko.bindingHandlers[\"comboboxValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"combobox\", allBindingsAccessor);\n        var value = valueAccessor();\n        if (!value()) {\n            var curValue = $(element)[\"combobox\"]('getValue');\n            if (curValue) {\n                value(curValue);\n            }\n        }\n        var options = $(element)[\"combobox\"]('options');\n        options.multiple = false;\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                value($(element)[\"combobox\"]('getValue'));\n                if (oriFun)\n                    oriFun.apply($(element), arguments);\n            };\n        };\n        options.onSelect = refreshValueFun(options.onSelect);\n        options.onUnselect = refreshValueFun(options.onUnselect);\n        utils.component.bindDisposeEvent(element, \"combobox\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if ($(element)[\"combobox\"]('getValue') !== value)\n            $(element)[\"combobox\"]('setValue', value);\n    }\n};\nko.bindingHandlers[\"comboboxText\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"combobox\", allBindingsAccessor);\n        var value = valueAccessor();\n        if (!value()) {\n            var curValue = $(element)[\"combobox\"]('getText');\n            if (curValue) {\n                value(curValue);\n            }\n        }\n        var options = $(element)[\"combobox\"]('options');\n        var comboOptions = $(element)[\"combo\"]('options');\n        options.multiple = false;\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                setTimeout(function () {\n                    var combo = $.data(element).combo;\n                    if (combo.hasOwnProperty('previousText')) {\n                        value(combo.previousText);\n                    }\n                    else {\n                        value($.data(element).combo.previousValue);\n                    }\n                }, 1);\n                if (oriFun)\n                    oriFun.apply($(element), arguments);\n            };\n        };\n        comboOptions.onChange = refreshValueFun(comboOptions.onChange);\n        utils.component.bindDisposeEvent(element, \"combobox\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if ($(element)[\"combobox\"]('getText') !== value)\n            $(element)[\"combobox\"]('setText', value);\n    }\n};\n\nko.bindingHandlers[\"combogridSource\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $combogrid = utils.component.initComponent(element, \"combogrid\", allBindingsAccessor);\n        var options = $combogrid[\"combogrid\"]('options');\n        var onLoadSuccess = options.onLoadSuccess;\n        options.onLoadSuccess = function (data) {\n            var source = valueAccessor();\n            source(data.rows);\n            if (onLoadSuccess) {\n                onLoadSuccess.apply($(element), arguments);\n            }\n            utils.component.bindDisposeEvent(element, \"combogrid\");\n        };\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var values = ko.utils.unwrapObservable(valueAccessor());\n        var options = $(element)[\"combogrid\"](\"options\");\n        var idSelector = function (item) { return item[options.idField]; };\n        var currentValues = $(element)[\"combogrid\"]('grid').datagrid('getData').rows;\n        if (!utils.array.sequenceEqual(currentValues, values, idSelector))\n            $(element)[\"combogrid\"]('grid').datagrid('loadData', values);\n    }\n};\nko.bindingHandlers[\"combogridValues\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"combogrid\", allBindingsAccessor, { multiple: true });\n        var curValues = $(element)[\"combogrid\"]('getValues');\n        if (utils.array.all(curValues, function (item) { return !item; })) {\n            $(element)[\"combogrid\"]('setValues', []);\n        }\n        var values = valueAccessor();\n        if (!values() || values().length === 0) {\n            curValues = $(element)[\"combogrid\"]('getValues');\n            if (curValues) {\n                values(curValues);\n            }\n        }\n        var $grid = $(element)[\"combogrid\"](\"grid\");\n        var options = $(element)[\"combogrid\"]('options');\n        var gridOptions = $grid.datagrid('options');\n        var comboOptions = $(element)[\"combo\"](\"options\");\n        options.multiple = true;\n        gridOptions.singleSelect = false;\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                var newValueIds = $(element)[\"combogrid\"]('getValues');\n                if (!utils.array.sequenceEqual(values(), newValueIds, utils.id)) {\n                    values(newValueIds);\n                    if (oriFun) {\n                        oriFun.apply($(element), arguments);\n                    }\n                }\n            };\n        };\n        comboOptions.onChange = refreshValueFun(comboOptions.onChange);\n        utils.component.bindDisposeEvent(element, \"combogrid\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var values = utils.array.map(ko.utils.unwrapObservable(valueAccessor()), function (v) { return utils.convertToString(v); });\n        var oriValues = $(element)[\"combogrid\"]('getValues');\n        var options = $(element)[\"combogrid\"](\"options\");\n        if (values) {\n            if (!utils.array.sequenceEqual(oriValues, values, utils.id))\n                $(element)[\"combogrid\"]('setValues', values);\n        }\n        else {\n            $(element)[\"combogrid\"]('clear');\n        }\n    }\n};\nko.bindingHandlers[\"combogridValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"combogrid\", allBindingsAccessor, { multiple: false });\n        var value = valueAccessor();\n        if (!value()) {\n            var curValue = $(element)[\"combogrid\"]('getValue');\n            if (curValue)\n                value(curValue);\n        }\n        var $grid = $(element)[\"combogrid\"](\"grid\");\n        var options = $(element)[\"combogrid\"]('options');\n        var gridOptions = $grid.datagrid('options');\n        var comboOptions = $(element)[\"combo\"](\"options\");\n        options.multiple = false;\n        gridOptions.singleSelect = true;\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                var newValueId = $(element)[\"combogrid\"]('getValue');\n                if (value() !== newValueId) {\n                    value(newValueId);\n                    if (oriFun) {\n                        oriFun.apply($(element), arguments);\n                    }\n                }\n            };\n        };\n        comboOptions.onChange = refreshValueFun(comboOptions.onChange);\n        utils.component.bindDisposeEvent(element, \"combogrid\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = utils.convertToString(ko.utils.unwrapObservable(valueAccessor()));\n        var oriValue = $(element)[\"combogrid\"]('getValue');\n        var options = $(element)[\"combogrid\"](\"options\");\n        if (value) {\n            if (oriValue !== value)\n                $(element)[\"combogrid\"]('setValue', value);\n        }\n        else {\n            $(element)[\"combogrid\"]('clear');\n        }\n    }\n};\n\nko.bindingHandlers[\"combotreeSource\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $combotree = utils.component.initComponent(element, \"combotree\", allBindingsAccessor);\n        var options = $combotree[\"combotree\"]('options');\n        var onLoadSuccess = options.onLoadSuccess;\n        options.onLoadSuccess = function (node, data) {\n            var source = valueAccessor();\n            var oriNodes = utils.tree.treeToArray(source() || []);\n            var newNodes = utils.tree.treeToArray($(element)[\"combotree\"]('tree').tree('getRoots'));\n            if (!utils.array.sequenceEqual(oriNodes, newNodes, utils.id)) {\n                source(utils.tree.clone(data));\n                if (onLoadSuccess) {\n                    onLoadSuccess.apply($(element), arguments);\n                }\n            }\n        };\n        utils.component.bindDisposeEvent(element, \"combotree\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var values = ko.utils.unwrapObservable(valueAccessor()) || [];\n        var oriNodes = utils.tree.treeToArray($(element)[\"combotree\"]('tree').tree('getRoots'));\n        var newNodes = utils.tree.treeToArray(values);\n        if (!utils.array.sequenceEqual(oriNodes, newNodes, utils.id)) {\n            $(element)[\"combotree\"]('loadData', utils.tree.clone(values));\n        }\n    }\n};\nko.bindingHandlers[\"combotreeValues\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"combotree\", allBindingsAccessor, { multiple: true });\n        var curValues = $(element)[\"combotree\"]('getValues');\n        if (utils.array.all(curValues, function (item) { return !item; })) {\n            $(element)[\"combotree\"]('setValues', []);\n        }\n        var values = valueAccessor();\n        if (!values() || values().length === 0) {\n            curValues = $(element)[\"combogrid\"]('getValues');\n            if (curValues) {\n                values(curValues);\n            }\n        }\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                var newValueIds = $(element)[\"combotree\"]('getValues');\n                if (!utils.array.sequenceEqual(values(), newValueIds, utils.id)) {\n                    values(newValueIds);\n                    if (oriFun) {\n                        oriFun.apply($(element), arguments);\n                    }\n                }\n            };\n        };\n        var options = $(element)[\"combotree\"]('options');\n        var comboOptions = $(element)[\"combo\"]('options');\n        if (options.multiple === false) {\n            options.onChange = refreshValueFun(options.onChange);\n            options.multiple = true;\n            $(element)[\"combotree\"](options);\n        }\n        else {\n            comboOptions.onChange = refreshValueFun(comboOptions.onChange);\n        }\n        utils.component.bindDisposeEvent(element, \"combotree\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var vs = ko.utils.unwrapObservable(valueAccessor());\n        var values = (!!vs) ? utils.array.map(vs, utils.convertToString) : [];\n        var oriValues = $(element)[\"combotree\"]('getValues');\n        if (values.length > 0) {\n            if (!utils.array.sequenceEqual(oriValues, values, utils.id)) {\n                $(element)[\"combotree\"]('setValues', values);\n            }\n        }\n        else {\n            $(element)[\"combotree\"]('clear');\n        }\n    }\n};\nko.bindingHandlers[\"combotreeValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"combotree\", allBindingsAccessor, { multiple: false });\n        var value = valueAccessor();\n        if (!value()) {\n            var curValue = $(element)[\"combogrid\"]('getValue');\n            if (curValue)\n                value(curValue);\n        }\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                var newValue = $(element)[\"combotree\"]('getValue');\n                if (value !== newValue) {\n                    value(newValue);\n                    if (oriFun) {\n                        oriFun.apply($(element), arguments);\n                    }\n                }\n            };\n        };\n        var options = $(element)[\"combotree\"]('options');\n        var comboOptions = $(element)[\"combo\"]('options');\n        if (options.multiple === true) {\n            options.onChange = refreshValueFun(options.onChange);\n            options.multiple = false;\n            $(element)[\"combotree\"](options);\n        }\n        else {\n            comboOptions.onChange = refreshValueFun(comboOptions.onChange);\n        }\n        utils.component.bindDisposeEvent(element, \"combotree\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var oriValue = $(element)[\"combotree\"]('getValue');\n        if (value) {\n            if (value !== oriValue) {\n                $(element)[\"combotree\"]('setValue', value);\n            }\n        }\n        else {\n            $(element)[\"combotree\"]('clear');\n        }\n    }\n};\n\n(function () {\n    var bindDatagridDisposeEvent = function (element) {\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n            if (utils.component.checkComponentInited(element, \"datagrid\")) {\n                $(element).data(\"datagrid\", null);\n            }\n        });\n    };\n    var getIdField = function (element) { return $(element)[\"datagrid\"]('options').idField || 'id'; };\n    ko.bindingHandlers[\"datagridSource\"] = {\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n            var $datagrid = utils.component.initComponent(element, \"datagrid\", allBindingsAccessor);\n            var options = $datagrid[\"datagrid\"]('options');\n            var onLoadSuccess = options.onLoadSuccess;\n            options.onLoadSuccess = function (datas) {\n                var value = valueAccessor();\n                value(datas.rows);\n                utils.func.safeApply(onLoadSuccess, $(element), arguments);\n            };\n            bindDatagridDisposeEvent(element);\n        },\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n            var values = ko.utils.unwrapObservable(valueAccessor());\n            $(element)[\"datagrid\"]('loadData', values);\n        }\n    };\n    ko.bindingHandlers[\"datagridValues\"] = {\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n            utils.component.ensureComponentInited(element, \"datagrid\", allBindingsAccessor, { singleSelect: false });\n            var idField = getIdField(element);\n            var values = valueAccessor();\n            if (values() && values().length > 0) {\n                var curValues = utils.array.clone($(element)[\"datagrid\"]('getSelections'));\n                values(curValues);\n            }\n            var options = $(element)[\"datagrid\"]('options');\n            options.singleSelect = false;\n            var refreshValueFun = function (oriFun) {\n                return function () {\n                    var selections = $(element)[\"datagrid\"]('getSelections');\n                    if (!utils.array.sequenceEqual(values(), selections, function (item) { return item[idField]; })) {\n                        values(utils.array.clone(selections));\n                        utils.func.safeApply(oriFun, $(element), arguments);\n                    }\n                };\n            };\n            options.onSelect = refreshValueFun(options.onSelect);\n            options.onUnselect = refreshValueFun(options.onUnselect);\n            options.onSelectAll = refreshValueFun(options.onSelectAll);\n            options.onUnselectAll = refreshValueFun(options.onUnselectAll);\n            bindDatagridDisposeEvent(element);\n        },\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n            var idField = getIdField(element);\n            var values = ko.utils.unwrapObservable(valueAccessor());\n            var options = $(element)[\"datagrid\"]('options');\n            if (values && values.length > 0) {\n                var data = $(element)[\"datagrid\"]('getData');\n                var selectedRows = [];\n                var invalidValueIndexs = [];\n                utils.array.each(values, function (value, index, vs) {\n                    var _a = utils.array.findIndexTuple(data.rows, function (item) { return item[idField] == value[idField]; }), rowIndex = _a[0], item = _a[1];\n                    if (item !== value) {\n                        if (item) {\n                            values[index] = item;\n                        }\n                        else {\n                            invalidValueIndexs.push(index);\n                        }\n                    }\n                    if (rowIndex >= 0) {\n                        selectedRows.push(rowIndex);\n                    }\n                });\n                utils.array.each(invalidValueIndexs, function (invalidIndex) {\n                    values.splice(invalidIndex, 1);\n                });\n                var onUnselectAll = options.onUnselectAll;\n                var onSelect = options.onSelect;\n                options.onUnselectAll = options.onSelect = function () { };\n                $(element)[\"datagrid\"]('unselectAll');\n                utils.array.each(selectedRows, function (selectedRow) {\n                    $(element)[\"datagrid\"]('selectRow', selectedRow);\n                });\n                options.onUnselectAll = onUnselectAll;\n                options.onSelect = onSelect;\n            }\n            else {\n                $(element)[\"datagrid\"]('unselectAll');\n            }\n        }\n    };\n    ko.bindingHandlers[\"datagridValue\"] = {\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n            utils.component.ensureComponentInited(element, \"datagrid\", allBindingsAccessor, { singleSelect: true });\n            var idField = getIdField(element);\n            var value = valueAccessor();\n            if (value()) {\n                var curValue = $(element)[\"datagrid\"]('getSelected');\n                value(curValue);\n            }\n            var options = $(element)[\"datagrid\"]('options');\n            options.singleSelect = true;\n            var refreshValueFun = function (oriFun) {\n                return function () {\n                    var selected = $(element)[\"datagrid\"]('getSelected');\n                    if (selected !== value()) {\n                        value(selected);\n                    }\n                    utils.func.safeApply(oriFun, $(element), arguments);\n                };\n            };\n            var unselectAllValueFun = function (oriFun) {\n                return function () {\n                    value(null);\n                    utils.func.safeApply(oriFun, $(element), arguments);\n                };\n            };\n            var selectAllValueFun = function (oriFun) {\n                return function () {\n                    var data = $(element)[\"datagrid\"]('getData');\n                    value(data.rows);\n                    utils.func.safeApply(oriFun, $(element), arguments);\n                };\n            };\n            options.onSelect = refreshValueFun(options.onSelect);\n            options.onUnselect = refreshValueFun(options.onUnselect);\n            options.onSelectAll = selectAllValueFun(options.onSelectAll);\n            options.onUnselectAll = unselectAllValueFun(options.onUnselectAll);\n            bindDatagridDisposeEvent(element);\n        },\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n            var idField = getIdField(element);\n            var value = valueAccessor();\n            var options = $(element)[\"datagrid\"]('options');\n            if (value()) {\n                if (utils.object.isArray(value()))\n                    return;\n                var curValue = $(element)[\"datagrid\"]('getSelected');\n                if (curValue) {\n                    if (curValue[idField] === value()[idField]) {\n                        if (curValue !== value()) {\n                            value(curValue);\n                        }\n                        return;\n                    }\n                }\n                var data = $(element)[\"datagrid\"]('getData');\n                var _a = utils.array.findIndexTuple(data.rows, function (item) { return item[idField] === value()[idField]; }), rowIndex = _a[0], item = _a[1];\n                if (rowIndex < 0) {\n                    value(null);\n                }\n                else {\n                    $(element)[\"datagrid\"]('selectRow', rowIndex);\n                }\n            }\n            else {\n                $(element)[\"datagrid\"]('unselectAll');\n            }\n        }\n    };\n})();\n\nko.bindingHandlers[\"dateboxValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"datebox\", allBindingsAccessor);\n        var options = $(element)[\"datebox\"]('options');\n        var value = valueAccessor();\n        if (!value()) {\n            var curValue = $(element)[\"datebox\"]('getValue');\n            if (curValue) {\n                value(curValue);\n            }\n        }\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                value($(element)[\"datebox\"]('getValue'));\n                utils.func.safeApply(oriFun, $(element), arguments);\n            };\n        };\n        options.onSelect = refreshValueFun(options.onSelect);\n        utils.component.bindDisposeEvent(element, \"datebox\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if ($(element)[\"datebox\"]('getValue') !== value) {\n            $(element)[\"datebox\"]('setValue', value);\n        }\n    }\n};\n\nko.bindingHandlers[\"datetimeboxValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"datetimebox\", allBindingsAccessor);\n        var options = $(element)[\"combo\"]('options');\n        var value = valueAccessor();\n        if (!value()) {\n            var curValue = $(element)[\"datetimebox\"]('getValue');\n            if (curValue) {\n                value(curValue);\n            }\n        }\n        var refreshValueFun = function (oriFun) {\n            return function () {\n                value($(element)[\"datetimebox\"]('getValue'));\n                utils.func.safeApply(oriFun, $(element), arguments);\n            };\n        };\n        options.onChange = refreshValueFun(options.onChange);\n        utils.component.bindDisposeEvent(element, \"datetimebox\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if ($(element)[\"datetimebox\"]('getValue') !== value) {\n            $(element)[\"datetimebox\"]('setValue', value);\n        }\n    }\n};\n\nko.bindingHandlers[\"numberBoxValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"numberbox\", allBindingsAccessor);\n        var value = valueAccessor();\n        if (!value()) {\n            value(parseFloat($(element)[\"numberbox\"]('getValue')));\n        }\n        var easyuiAccessor = ($(element)[\"textbox\"] || ($(element)[\"numberbox\"]));\n        var options = easyuiAccessor.call($(element), 'options');\n        var onChange = options.onChange;\n        options.onChange = function (newValue, oldValue) {\n            newValue = parseFloat(newValue);\n            value = valueAccessor();\n            if (value() !== newValue) {\n                value(newValue);\n                utils.func.safeApply(onChange, $(element), arguments);\n            }\n        };\n        utils.component.bindDisposeEvent(element, \"numberbox\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        $(element)[\"numberbox\"]('setValue', value);\n        if ($(element)[\"numberbox\"]('getValue')) {\n            $(element).removeClass(\"validatebox-invalid\");\n        }\n        else {\n            if ($(element)[\"numberbox\"]('options').required) {\n                $(element).addClass(\"validatebox-invalid\");\n            }\n        }\n    }\n};\n\nko.bindingHandlers[\"numberspinnerValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"numberspinner\", allBindingsAccessor);\n        var value = valueAccessor();\n        if (!value()) {\n            value(parseFloat($(element)[\"numberspinner\"]('getValue')));\n        }\n        var easyuiAccessor = ($(element)[\"textbox\"] || ($(element)[\"numberbox\"]));\n        var options = easyuiAccessor.call($(element), 'options');\n        var onChange = options.onChange;\n        options.onChange = function (newValue, oldValue) {\n            newValue = parseFloat(newValue);\n            value = valueAccessor();\n            if (value() !== newValue) {\n                value(newValue);\n                utils.func.safeApply(onChange, $(element), arguments);\n            }\n        };\n        utils.component.bindDisposeEvent(element, \"numberspinner\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        $(element)[\"numberspinner\"]('setValue', value);\n        var newActualValue = $(element)[\"numberspinner\"]('getValue');\n        if (newActualValue) {\n            $(element).removeClass(\"validatebox-invalid\");\n            if (newActualValue !== value) {\n                valueAccessor()(parseFloat(newActualValue));\n            }\n        }\n        else {\n            if ($(element)[\"numberspinner\"]('options').required)\n                $(element).addClass(\"validatebox-invalid\");\n        }\n    }\n};\n\nko.bindingHandlers[\"progressbarValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"progressbar\", allBindingsAccessor);\n        var value = valueAccessor();\n        if (!value()) {\n            value($(element)[\"progressbar\"]('getValue'));\n        }\n        var options = $(element)[\"progressbar\"]('options');\n        var onChange = options.onChange;\n        options.onChange = function (newValue, oldValue) {\n            newValue = parseFloat(newValue);\n            var value = valueAccessor();\n            if (value() !== newValue) {\n                value(newValue);\n                if (onChange) {\n                    onChange.apply(this, arguments);\n                }\n            }\n        };\n        utils.component.bindDisposeEvent(element, \"progressbar\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        $(element)[\"progressbar\"]('setValue', value);\n        var updatedValue = $(element)[\"progressbar\"]('getValue');\n        if (value !== updatedValue) {\n            valueAccessor()(updatedValue);\n        }\n    }\n};\n\nko.bindingHandlers[\"sliderValue\"] = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        utils.component.ensureComponentInited(element, \"slider\", allBindingsAccessor);\n        var value = valueAccessor();\n        if (!value()) {\n            value($(element)[\"slider\"]('getValue'));\n        }\n        var options = $(element)[\"slider\"]('options');\n        var onChange = options.onChange;\n        options.onChange = function (newValue, oldValue) {\n            if (newValue !== value()) {\n                value(newValue);\n                if (onChange) {\n                    onChange.apply(this, arguments);\n                }\n            }\n        };\n        utils.component.bindDisposeEvent(element, \"slider\");\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if ($(element)[\"slider\"]('getValue') !== value)\n            $(element)[\"slider\"]('setValue', value);\n    }\n};\n\n}); "],"sourceRoot":"./src"}